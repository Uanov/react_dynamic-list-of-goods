{"version":3,"sources":["api/goods.js","GoodsList.jsx","App.js","index.js"],"names":["API_URL","getAll","fetch","then","response","json","get5First","goods","sort","a","b","name","localeCompare","filter","good","index","getRedGoods","color","GoodsList","map","key","id","className","style","App","state","goodsHandler","callback","setState","this","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6OACMA,G,MAAO,yEAEN,SAASC,IACd,OAAOC,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,kBAAMJ,MAAMF,GAClCG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MACC,SAAAI,GAAK,OAAIA,EACNC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,SACtCE,QAAO,SAACC,EAAMC,GAAP,OAAiBA,EAAQ,SAG1BC,EAAc,kBAAMd,MAAMF,GACpCG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MACC,SAAAI,GAAK,OAAIA,EAAMM,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKG,aChB1BC,EAAY,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAH,OACvB,4BACGA,EAAMY,KAAI,SAAAL,GAAI,OACb,wBACEM,IAAKN,EAAKO,GACVC,UAAU,mBACVC,MAAO,CAAEN,MAAOH,EAAKG,QAEpBH,EAAKH,WCJDa,EAAb,4MACEC,MAAQ,CACNlB,MAAO,IAFX,EAKEmB,aAAe,SAACC,GACdA,IAAWxB,MAAK,SAACI,GACf,EAAKqB,SAAS,CACZrB,cARR,4CAaE,WAAU,IAAD,OACCA,EAAUsB,KAAKJ,MAAflB,MAER,OACE,yBAAKe,UAAU,OACb,yBAAKA,UAAU,mBACb,4BACEQ,KAAK,SACLR,UAAU,SACVS,QAAS,kBAAM,EAAKL,aAAazB,KAHnC,aAOA,4BACEqB,UAAU,sBACVQ,KAAK,SACLC,QAAS,kBAAM,EAAKL,aAAapB,KAHnC,cAOA,4BACEgB,UAAU,qBACVQ,KAAK,SACLC,QAAS,kBAAM,EAAKL,aAAaV,KAHnC,cAQF,kBAAC,EAAD,CAAWT,MAAOA,SAzC1B,GAAyByB,IAAMC,WCH/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.7903449a.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => fetch(API_URL)\n  .then(response => response.json())\n  .then(\n    goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .filter((good, index) => index < 5),\n  );\n\nexport const getRedGoods = () => fetch(API_URL)\n  .then(response => response.json())\n  .then(\n    goods => goods.filter(good => good.color === 'red'),\n  );\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        className=\"goods-list__item\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\n\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport { GoodsList } from './GoodsList';\n\nexport class App extends React.Component {\n  state = {\n    goods: [],\n  }\n\n  goodsHandler = (callback) => {\n    callback().then((goods) => {\n      this.setState({\n        goods,\n      });\n    });\n  }\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"buttons-wrapper\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => this.goodsHandler(getAll)}\n          >\n            All goods\n          </button>\n          <button\n            className=\"button button--blue\"\n            type=\"button\"\n            onClick={() => this.goodsHandler(get5First)}\n          >\n            five first\n          </button>\n          <button\n            className=\"button button--red\"\n            type=\"button\"\n            onClick={() => this.goodsHandler(getRedGoods)}\n          >\n            Red goods\n          </button>\n        </div>\n        <GoodsList goods={goods} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}